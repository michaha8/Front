{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport UserModel from \"../model/UserModel\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ListItem = function ListItem(_ref) {\n  var name = _ref.name,\n    city = _ref.city,\n    email = _ref.email,\n    description = _ref.description,\n    phoneNumber = _ref.phoneNumber,\n    preference = _ref.preference,\n    hospitalQuantity = _ref.hospitalQuantity,\n    onRowSelected = _ref.onRowSelected,\n    onPreferenceChange = _ref.onPreferenceChange;\n  var onClick = function onClick() {\n    console.log('int he row: row was selected ' + email);\n    console.log('int he row: avatrUrl ' + rating);\n    console.log('Im the user ' + email);\n    onRowSelected(email, rating);\n  };\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    rating = _useState2[0],\n    setRating = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nameU = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    GPAU = _useState6[0],\n    setGPA = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    cityU = _useState8[0],\n    setCity = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    partnerIDU = _useState10[0],\n    setPartnerID = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    descriptionU = _useState12[0],\n    setDescription = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showFullDescription = _useState14[0],\n    setShowFullDescription = _useState14[1];\n  var updatePreference = function updatePreference(name, rating) {\n    onPreferenceChange(rating, name);\n  };\n  var toggleShowFullDescription = function toggleShowFullDescription() {\n    setShowFullDescription(!showFullDescription);\n  };\n  var getUserDetails = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log(\"sender : \" + name);\n        var user = yield UserModel.getUserbyEmail(email);\n        setName(user.name);\n      } catch (err) {\n        console.log(\"fail getting user by ID \" + err);\n      }\n    });\n    return function getUserDetails() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getUserDetails();\n    console.log(\"its me \" + name);\n  });\n  var IconValu = function IconValu(_ref3) {\n    var label = _ref3.label,\n      value = _ref3.value;\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.iconLabel,\n        children: label\n      }), _jsx(View, {\n        style: styles.iconValue,\n        children: _jsx(Text, {\n          style: styles.value,\n          children: value\n        })\n      })]\n    });\n  };\n  return _jsx(TouchableHighlight, {\n    onPress: onClick,\n    underlayColor: 'gainsboro',\n    children: _jsx(View, {\n      style: styles.cardItem,\n      children: _jsx(View, {\n        style: {\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: styles.listRowTextContainer,\n          children: [_jsx(IconValu, {\n            label: \"Name\",\n            value: name\n          }), _jsx(IconValu, {\n            label: \"Email\",\n            value: email\n          }), _jsx(IconValu, {\n            label: \"Hospital Quantity\",\n            value: hospitalQuantity\n          }), _jsx(IconValu, {\n            label: \"phoneNumber\",\n            value: phoneNumber\n          }), _jsxs(View, {\n            style: styles.listRowTextContainer,\n            children: [_jsx(Text, {\n              style: styles.iconLabel,\n              children: \"Description\"\n            }), _jsx(Text, {\n              style: styles.value,\n              children: showFullDescription ? description : \"\" + description.substring(15, description.indexOf('\\n\\n'))\n            }), description.length > 40 && _jsx(TouchableOpacity, {\n              onPress: toggleShowFullDescription,\n              children: _jsx(Text, {\n                style: {\n                  color: 'blue'\n                },\n                children: showFullDescription ? 'Read Less' : 'Read More'\n              })\n            }), _jsx(TextInput, {\n              style: styles.iconLabel,\n              placeholder: \"Enter rating\",\n              keyboardType: \"numeric\",\n              onEndEditing: function onEndEditing(event) {\n                var text = event.nativeEvent.text;\n                if (isNaN(text)) {\n                  Alert.alert('Please enter a valid number');\n                  console.log(\"Input is not a number\");\n                } else {\n                  updatePreference(name.toString(), Number(text));\n                }\n              }\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\nvar WatchHospitalsPage = function WatchHospitalsPage(_ref4) {\n  var route = _ref4.route,\n    navigation = _ref4.navigation;\n  var _useState15 = useState(\"https://cdn3.vectorstock.com/i/1000x1000/78/32/male-doctor-with-stethoscope-avatar-vector-31657832.jpg\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    avatarUri = _useState16[0],\n    setAvatrUri = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    email = _useState18[0],\n    setEmail = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    name = _useState20[0],\n    setName = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    idIntern = _useState22[0],\n    setIDIntern = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    institution = _useState24[0],\n    setInstitution = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    specialization = _useState26[0],\n    setSpecialization = _useState26[1];\n  var _useState27 = useState(\"\"),\n    _useState28 = _slicedToArray(_useState27, 2),\n    phoneNumber = _useState28[0],\n    setPhoneNuber = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    GPA = _useState30[0],\n    setGPA = _useState30[1];\n  var _useState31 = useState(\"\"),\n    _useState32 = _slicedToArray(_useState31, 2),\n    city = _useState32[0],\n    setCity = _useState32[1];\n  var _useState33 = useState(\"\"),\n    _useState34 = _slicedToArray(_useState33, 2),\n    partnerID = _useState34[0],\n    setPartnerID = _useState34[1];\n  var _useState35 = useState(\"\"),\n    _useState36 = _slicedToArray(_useState35, 2),\n    userType = _useState36[0],\n    setUserType = _useState36[1];\n  var _useState37 = useState(\"\"),\n    _useState38 = _slicedToArray(_useState37, 2),\n    hospitalQuantity = _useState38[0],\n    setHospitalQuantity = _useState38[1];\n  var _useState39 = useState([]),\n    _useState40 = _slicedToArray(_useState39, 2),\n    preferenceArray = _useState40[0],\n    setPreferenceArray = _useState40[1];\n  var _useState41 = useState(\"\"),\n    _useState42 = _slicedToArray(_useState41, 2),\n    description = _useState42[0],\n    setDescription = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    isLoading = _useState44[0],\n    setIsLoading = _useState44[1];\n  var loadUser = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      var id = yield AsyncStorage.getItem('id');\n      var res = yield UserModel.getUserById(id);\n      setName(res[0]);\n      setCity(res[1]);\n      setEmail(res[2]);\n      setDescription(res[3]);\n      setGPA(res[4]);\n      setPhoneNuber(res[5]);\n      setAvatrUri(res[6]);\n      setInstitution(res[7]);\n      setIDIntern(res[11]);\n      setPartnerID(res[9]);\n      setSpecialization(res[10]);\n      setPreferenceArray(res[12]);\n      setUserType(res[13]);\n      console.log('USerLogIN');\n      console.log(id);\n      console.log(res[12]);\n      console.log(preferenceArray);\n      setIsLoading(false);\n    });\n    return function loadUser() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handlerSaveBT = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var filteredArray = preference.filter(function (value) {\n        return value !== undefined && value !== 'none';\n      });\n      console.log(filteredArray);\n      setPreferenceArray(filteredArray);\n      console.log('HANDLE SAVE ' + preferenceArray);\n      console.log('HANDLE SAVE ' + preference);\n      try {\n        yield handleSaveToMongoo(filteredArray);\n        navigation.navigate('PreferenceListPage', {\n          preferenceArray: filteredArray,\n          userType: 'Intern'\n        });\n      } catch (err) {\n        console.log('Error Save to Mongo ' + err);\n      }\n    });\n    return function handlerSaveBT() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleSaveToMongoo = function () {\n    var _ref7 = _asyncToGenerator(function* (prefArray) {\n      var id_ = yield AsyncStorage.getItem('id');\n      var up = {\n        id: id_,\n        idIntern: idIntern,\n        educationalInstitution: institution,\n        partnerID: partnerID,\n        typeOfInternship: specialization,\n        description: description,\n        GPA: GPA,\n        city: city,\n        name: name,\n        phoneNumber: phoneNumber,\n        email: email,\n        avatarUrl: avatarUri,\n        userType: userType,\n        preferenceArray: _toConsumableArray(prefArray)\n      };\n      console.log(up);\n      try {\n        var res = yield UserModel.upadteUserIntern(up);\n        console.log(\"update user success\");\n      } catch (err) {\n        console.log(\"update user failed \" + err);\n      }\n    });\n    return function handleSaveToMongoo(_x) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var onRowSelected = function onRowSelected(email) {\n    console.log(\"in the list: row was selected \" + email);\n  };\n  var _useState45 = useState([]),\n    _useState46 = _slicedToArray(_useState45, 2),\n    preference = _useState46[0],\n    setPreference = _useState46[1];\n  var _useState47 = useState(),\n    _useState48 = _slicedToArray(_useState47, 2),\n    users = _useState48[0],\n    setUsers = _useState48[1];\n  var onPreferenceChange = function onPreferenceChange(index, name) {\n    console.log('Index ' + index + ' Name ' + name);\n    console.log('preferenceAfterChane ' + preference);\n    setPreference(function (preference) {\n      var c = preference.findIndex(function (p) {\n        return p === name;\n      });\n      console.log('c ' + c);\n      var newPreference = _toConsumableArray(preference);\n      console.log('newPreference ' + newPreference);\n      if (index === -1) {\n        newPreference[index - 1] = name;\n      } else {\n        newPreference[c] = 'none';\n        newPreference[index - 1] = name;\n      }\n      console.log('newPreferenceNow');\n      console.log(newPreference);\n      console.log('preferenceAfterChane ' + preference);\n      console.log(preference);\n      return newPreference;\n    });\n  };\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', _asyncToGenerator(function* () {\n      setIsLoading(true);\n      console.log('focus');\n      loadUser();\n      Alert.alert('Choose preferences for all users', 'From 1-The Must Wanted!', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }], {\n        cancelable: false\n      });\n      var useres = [];\n      try {\n        console.log('getAllHospitals');\n        useres = yield UserModel.getAllHospitalsUsers();\n        console.log(\"fetching Users complete\");\n      } catch (err) {\n        console.log(\"fail fetching Users \" + err);\n      }\n      console.log(\"fetching finish\");\n      setUsers(useres);\n    }));\n    setIsLoading(false);\n    return unsubscribe;\n  }, []);\n  if (isLoading) {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"black\"\n      })\n    });\n  }\n  return _jsx(_Fragment, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.card,\n        children: _jsx(FlatList, {\n          style: styles.flatlist,\n          data: users,\n          keyExtractor: function keyExtractor(userHospital) {\n            return userHospital.name.toString();\n          },\n          renderItem: function renderItem(_ref9) {\n            var item = _ref9.item;\n            return _jsx(ListItem, {\n              preference: preference,\n              city: item.city,\n              description: item.description,\n              name: item.name,\n              hospitalQuantity: item.hospitalQuantity,\n              email: item.email,\n              onPreferenceChange: onPreferenceChange,\n              onRowSelected: onRowSelected,\n              password: item.password,\n              userType: item.userType,\n              phoneNumber: item.phoneNumber\n            });\n          }\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: handlerSaveBT,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Save Preference\"\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  color: {\n    borderColor: \"mediumturquoise\"\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: \"aliceblue\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  container: {\n    marginTop: StatusBar.currentHeight,\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: \"aliceblue\"\n  },\n  flatlist: {\n    flex: 1\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    position: 'absolute',\n    bottom: 0,\n    alignSelf: 'center',\n    justifyContent: 'space-around',\n    marginHorizontal: 20\n  },\n  button: {\n    backgroundColor: 'lightcyan',\n    borderRadius: 10,\n    padding: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    borderWidth: 2,\n    borderColor: 'gainsboro',\n    marginBottom: 10,\n    alignSelf: 'center'\n  },\n  listRow: {\n    margin: 4,\n    flexDirection: \"row\",\n    height: 150,\n    elevation: 4,\n    borderRadius: 40\n  },\n  userDetailsRow: {\n    flexDirection: \"row\",\n    height: 40,\n    alignItems: 'flex-start',\n    alignSelf: 'center'\n  },\n  listRowImage: {\n    margin: 10,\n    resizeMode: \"contain\",\n    height: 130,\n    width: 130\n  },\n  listRowTextContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    margin: 20,\n    justifyContent: \"space-around\"\n  },\n  listRowName: {\n    fontSize: 30\n  },\n  listRowId: {\n    fontSize: 25\n  },\n  profilePicture: {\n    width: 35,\n    height: 35,\n    borderRadius: 75,\n    marginEnd: 20\n  },\n  card: {\n    backgroundColor: 'aliceblue',\n    borderRadius: 10,\n    padding: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  cardItem: {\n    backgroundColor: 'aliceblue',\n    borderRadius: 70,\n    borderColor: \"lightcyan\",\n    borderWidth: 2,\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 40,\n    marginVertical: 3\n  },\n  iconContainer: {\n    alignItems: 'center'\n  },\n  icon: {\n    width: 50,\n    height: 50,\n    marginBottom: 10\n  },\n  iconLabel: {\n    fontSize: 15,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    color: 'mediumturquoise',\n    textAlign: 'center'\n  },\n  iconValue: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  value: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'grey',\n    marginRight: 8,\n    alignSelf: 'center'\n  }\n});\nexport default WatchHospitalsPage;","map":{"version":3,"names":["React","useState","useEffect","StatusBar","StyleSheet","Text","View","TouchableOpacity","Alert","TextInput","FlatList","TouchableHighlight","ScrollView","ActivityIndicator","UserModel","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListItem","_ref","name","city","email","description","phoneNumber","preference","hospitalQuantity","onRowSelected","onPreferenceChange","onClick","console","log","rating","_useState","_useState2","_slicedToArray","setRating","_useState3","_useState4","nameU","setName","_useState5","_useState6","GPAU","setGPA","_useState7","_useState8","cityU","setCity","_useState9","_useState10","partnerIDU","setPartnerID","_useState11","_useState12","descriptionU","setDescription","_useState13","_useState14","showFullDescription","setShowFullDescription","updatePreference","toggleShowFullDescription","getUserDetails","_ref2","_asyncToGenerator","user","getUserbyEmail","err","apply","arguments","IconValu","_ref3","label","value","style","styles","container","children","iconLabel","iconValue","onPress","underlayColor","cardItem","alignItems","listRowTextContainer","substring","indexOf","length","color","placeholder","keyboardType","onEndEditing","event","text","nativeEvent","isNaN","alert","toString","Number","WatchHospitalsPage","_ref4","route","navigation","_useState15","_useState16","avatarUri","setAvatrUri","_useState17","_useState18","setEmail","_useState19","_useState20","_useState21","_useState22","idIntern","setIDIntern","_useState23","_useState24","institution","setInstitution","_useState25","_useState26","specialization","setSpecialization","_useState27","_useState28","setPhoneNuber","_useState29","_useState30","GPA","_useState31","_useState32","_useState33","_useState34","partnerID","_useState35","_useState36","userType","setUserType","_useState37","_useState38","setHospitalQuantity","_useState39","_useState40","preferenceArray","setPreferenceArray","_useState41","_useState42","_useState43","_useState44","isLoading","setIsLoading","loadUser","_ref5","id","getItem","res","getUserById","handlerSaveBT","_ref6","filteredArray","filter","undefined","handleSaveToMongoo","navigate","_ref7","prefArray","id_","up","educationalInstitution","typeOfInternship","avatarUrl","_toConsumableArray","upadteUserIntern","_x","_useState45","_useState46","setPreference","_useState47","_useState48","users","setUsers","index","c","findIndex","p","newPreference","unsubscribe","addListener","cancelable","useres","getAllHospitalsUsers","loadingContainer","size","card","flatlist","data","keyExtractor","userHospital","renderItem","_ref9","item","password","buttonContainer","button","buttonText","create","borderColor","flex","backgroundColor","justifyContent","marginTop","currentHeight","flexDirection","fontSize","fontWeight","textAlign","position","bottom","alignSelf","marginHorizontal","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","borderWidth","marginBottom","listRow","margin","userDetailsRow","listRowImage","resizeMode","listRowName","listRowId","profilePicture","marginEnd","marginVertical","iconContainer","icon","marginRight"],"sources":["C:/Users/michael harush/Desktop/Front/components/WatchHospitalsPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { StatusBar, StyleSheet, Text, View, Image, TouchableOpacity, Button, Alert, TextInput, FlatList, TouchableHighlight, BackHandler, TextInputComponent, ScrollView, ActivityIndicator } from 'react-native';\r\nimport { UserHospital, UserIntern } from '../model/AuthModel';\r\nimport UserModel, { Post, UserUpdateHospital, UserUpdateIntern } from '../model/UserModel';\r\nimport { Rating } from 'react-native-ratings';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst ListItem: FC<{ \r\n    name: String, \r\n    email:String,\r\n    city:String ,\r\n   password:String, userType:String,\r\n   description: String,\r\n hospitalQuantity:String,\r\n   phoneNumber:String,\r\n   preference: Array<String>,\r\n   onPreferenceChange: (index: number, name: string) => void,\r\n   onRowSelected: (id: String, rating: number) => void }> =\r\n    ({ name, city,email,description,phoneNumber,preference,hospitalQuantity, onRowSelected , onPreferenceChange,}) => {\r\n        const onClick = () => {\r\n            console.log('int he row: row was selected ' + email)\r\n            console.log('int he row: avatrUrl ' + rating)\r\n            console.log('Im the user ' + email)\r\n            onRowSelected(email,rating)\r\n        }\r\n        const [rating, setRating] = useState<number>(0);\r\n    \r\n         const [nameU, setName] = useState<string>(\"\");\r\n      \r\n         const[GPAU,setGPA]=useState<string>(\"\")\r\n         const[cityU,setCity]=useState<string>(\"\")\r\n         const[partnerIDU,setPartnerID]=useState<string>(\"\")\r\n        const[descriptionU,setDescription]=useState<string>(``)\r\n        const [showFullDescription, setShowFullDescription] = useState(false)\r\n        const updatePreference = (name: string, rating: number) => {\r\n            onPreferenceChange(rating,name)\r\n        };\r\n        const toggleShowFullDescription = () => {\r\n            setShowFullDescription(!showFullDescription);\r\n        };\r\n    \r\n        const getUserDetails = async ()=>{\r\n            try{\r\n                console.log(\"sender : \"+ name)\r\n                const user = await UserModel.getUserbyEmail(email)\r\n                setName(user.name)\r\n            }catch(err){\r\n                console.log(\"fail getting user by ID \" + err)\r\n            }\r\n        }\r\n\r\n        useEffect(()=>{\r\n            getUserDetails()\r\n            console.log(\"its me \"+ name)\r\n        })\r\n        interface ValueProps {\r\n            label: string;\r\n            value: String;\r\n          }\r\n        const IconValu: FC<ValueProps> = ({ label, value }) => {\r\n            return (\r\n                \r\n              <View style={styles.container}>\r\n                <Text style={styles.iconLabel}>{label}</Text>\r\n                <View style={styles.iconValue}>\r\n                  <Text style={styles.value}>{value}</Text>\r\n                </View>\r\n              </View>\r\n            );\r\n          };\r\n        return (\r\n          <TouchableHighlight onPress={onClick} underlayColor={'gainsboro'}>\r\n          {/* <Text style={styles.iconLabel}>Choose preferens from must wanted 1 </Text> */}\r\n          {/* <View style={styles.listRow}></View> */}\r\n          <View style={styles.cardItem}>\r\n\r\n             < View style={{  alignItems: 'center' }}>\r\n                    <View style={styles.listRowTextContainer}>\r\n                        <IconValu label='Name' value={name} />\r\n                        <IconValu label='Email' value={email} />\r\n                        <IconValu label='Hospital Quantity' value={hospitalQuantity} />\r\n                        <IconValu label='phoneNumber' value={phoneNumber} />\r\n                        <View style={styles.listRowTextContainer}>\r\n                        <Text style={styles.iconLabel}>\r\n                           Description \r\n                        </Text> \r\n                        <Text style={styles.value}>\r\n                           {showFullDescription ? description : `${description.substring(15, description.indexOf('\\n\\n'))}`}\r\n                        </Text> \r\n                        {description.length > 40 && (\r\n                            <TouchableOpacity onPress={toggleShowFullDescription}>\r\n                                <Text style={{ color: 'blue' }}>{showFullDescription ? 'Read Less' : 'Read More'}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                       \r\n                        <TextInput\r\n                          style={styles.iconLabel}\r\n                          placeholder=\"Enter rating\"\r\n                        keyboardType=\"numeric\"\r\n                        onEndEditing={(event) => {\r\n                          const text = event.nativeEvent.text;\r\n                          if (isNaN(text)) {\r\n                            Alert.alert('Please enter a valid number');\r\n                            console.log(\"Input is not a number\");\r\n                          } else {\r\n                            updatePreference(name.toString(), Number(text));\r\n                          }\r\n                        }}\r\n                      />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                </View>\r\n            </TouchableHighlight>\r\n        )\r\n    }\r\n\r\n\r\nconst WatchHospitalsPage: FC<{ route: any, navigation: any }> = ({ route, navigation }) => {\r\n\r\n\r\n\r\n    const [avatarUri, setAvatrUri] = useState(\"https://cdn3.vectorstock.com/i/1000x1000/78/32/male-doctor-with-stethoscope-avatar-vector-31657832.jpg\")\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [name, setName] = useState<string>(\"\");\r\n    const[idIntern,setIDIntern]=useState<string>(\"\");\r\n    const[institution,setInstitution]=useState<string>(\"\");\r\n    const[specialization,setSpecialization]=useState<string>(\"\")\r\n    const[phoneNumber,setPhoneNuber]=useState<string>(\"\")\r\n    const[GPA,setGPA]=useState<string>(\"\")\r\n    const[city,setCity]=useState<string>(\"\")\r\n    const[partnerID,setPartnerID]=useState<string>(\"\")\r\n    const[userType,setUserType]=useState<string>(\"\")\r\n    const [hospitalQuantity,setHospitalQuantity]= useState<string>(\"\");\r\n    const [preferenceArray, setPreferenceArray] = useState<string[]>([]);\r\n    const [description, setDescription] = useState<string>(\r\n        \"\"\r\n      );\r\n      const [isLoading, setIsLoading] = useState(false);\r\n  \r\n    const loadUser = async ()=>{\r\n\r\n        //Thats way i know how is log in\r\n        setIsLoading(true)\r\n        const id = await AsyncStorage.getItem('id')\r\n        const res = await UserModel.getUserById(id)\r\n        setName(res[0])\r\n        setCity(res[1])\r\n        setEmail(res[2])\r\n        setDescription(res[3])\r\n        setGPA(res[4])\r\n        setPhoneNuber(res[5])\r\n        setAvatrUri(res[6])\r\n        setInstitution(res[7])\r\n        setIDIntern(res[11])\r\n        setPartnerID(res[9])\r\n        setSpecialization(res[10])\r\n        setPreferenceArray(res[12])\r\n        setUserType(res[13])\r\n        \r\n        console.log('USerLogIN')\r\n        console.log(id)\r\n        console.log(res[12])\r\n        console.log(preferenceArray)\r\n        setIsLoading(false)\r\n      }\r\n\r\n\r\n      const handlerSaveBT=async()=>{\r\n        \r\n        const filteredArray = preference.filter((value) => {\r\n          return value !== undefined && value !== 'none';\r\n        });\r\n        console.log(filteredArray)\r\n          setPreferenceArray(filteredArray)\r\n          console.log('HANDLE SAVE '+ preferenceArray)\r\n          console.log('HANDLE SAVE '+ preference)\r\n         try{ await handleSaveToMongoo(filteredArray)\r\n          navigation.navigate('PreferenceListPage', { preferenceArray: filteredArray,userType:'Intern' });\r\n         }catch(err){\r\n          console.log('Error Save to Mongo '+ err)\r\n         }\r\n        }\r\n\r\n  const handleSaveToMongoo = async (prefArray: string[]) => {\r\n    const id_ = await AsyncStorage.getItem('id')\r\n    const up : UserUpdateIntern = {\r\n      id: id_,\r\n          idIntern:idIntern,\r\n          educationalInstitution:institution,\r\n          partnerID:partnerID,\r\n          typeOfInternship:specialization,\r\n          description:description,\r\n          GPA:GPA,\r\n          city:city,\r\n          name: name,\r\n          phoneNumber:phoneNumber,\r\n          email:email,\r\n          avatarUrl: avatarUri,\r\n          userType:userType\r\n          ,preferenceArray:[...prefArray]\r\n    }\r\n    console.log(up)\r\n    try{\r\n      const res = await UserModel.upadteUserIntern(up)\r\n      console.log(\"update user success\")\r\n    } catch(err){\r\n      console.log(\"update user failed \" + err)\r\n    }\r\n  };\r\n\r\n    const onRowSelected = (email: String) => {\r\n      \r\n        console.log(\"in the list: row was selected \" + email)\r\n        \r\n    }\r\n    const [preference, setPreference] = useState<string[]>([]);\r\n    const [users, setUsers] = useState<Array<UserHospital>>();\r\n    const onPreferenceChange = (index: number, name: string) => {\r\n    \r\n        console.log('Index '+ index +' Name '+name)\r\n        console.log('preferenceAfterChane '+preference)\r\n             setPreference(preference => {\r\n            const c = preference.findIndex(p => p === name);\r\n            console.log('c '+c)\r\n            const newPreference = [...preference];\r\n            console.log('newPreference '+newPreference)\r\n            if (index === -1) {\r\n                newPreference[index - 1] = name;\r\n            } else {\r\n                newPreference[c] = 'none';\r\n                newPreference[index - 1] = name;\r\n            }\r\n            console.log('newPreferenceNow')\r\n            console.log(newPreference)\r\n            // setPreference(newPreference)\r\n            console.log('preferenceAfterChane '+preference)\r\n            console.log(preference)\r\n            return newPreference;\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        const unsubscribe = navigation.addListener('focus', async () => {\r\n          setIsLoading(true)\r\n            console.log('focus')\r\n            loadUser()\r\n            Alert.alert(\r\n                'Choose preferences for all users',\r\n                'From 1-The Must Wanted!',\r\n                [\r\n                  {text: 'OK', onPress: () => console.log('OK Pressed')},\r\n                ],\r\n                {cancelable: false},\r\n              );\r\n            let useres: UserHospital[] = []\r\n            try {\r\n                console.log('getAllHospitals')\r\n              useres = await UserModel.getAllHospitalsUsers()\r\n                console.log(\"fetching Users complete\")\r\n            } catch (err) {\r\n                console.log(\"fail fetching Users \" + err)\r\n            }\r\n            console.log(\"fetching finish\")\r\n            setUsers(useres)\r\n        })\r\n        setIsLoading(false)\r\n        return unsubscribe\r\n    }, [])\r\n    if (isLoading) {\r\n      // show loading icon\r\n      return (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"black\"/>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n        <>\r\n        <ScrollView>\r\n         <View style={styles.card}>\r\n        <FlatList style={styles.flatlist}\r\n            data={users}\r\n            keyExtractor={userHospital => userHospital.name.toString()}\r\n            renderItem={({ item }) => (\r\n                <ListItem   preference={preference}  city={item.city} description={item.description}  \r\n                 name={item.name} hospitalQuantity={item.hospitalQuantity} \r\n                email={item.email} onPreferenceChange={onPreferenceChange}\r\n                 onRowSelected={onRowSelected} \r\n                 password={item.password} userType={item.userType}  \r\n                  phoneNumber={item.phoneNumber} />\r\n            )}\r\n        >\r\n        </FlatList>\r\n    </View>\r\n  \r\n    <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.button} onPress={handlerSaveBT}>\r\n            <Text style={styles.buttonText}>\r\n                Save Preference\r\n            </Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n    </ScrollView>\r\n        </>\r\n     \r\n    );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    color:{\r\n        borderColor:\"mediumturquoise\",\r\n    },\r\n    loadingContainer: {\r\n      flex: 1,\r\n      backgroundColor: \"aliceblue\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    container: {\r\n        marginTop: StatusBar.currentHeight,\r\n        flex: 1,\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        backgroundColor: \"aliceblue\",\r\n    },\r\n    flatlist: {\r\n        flex: 1,\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        },\r\n        buttonContainer: {\r\n            position: 'absolute',\r\n            bottom: 0,\r\n            alignSelf: 'center',\r\n            justifyContent: 'space-around',\r\n            marginHorizontal: 20,\r\n          },\r\n            button: {\r\n                backgroundColor: 'lightcyan',\r\n                borderRadius: 10,\r\n                padding: 8,\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                shadowColor: '#000',\r\n                shadowOffset: { width: 0, height: 2 },\r\n                shadowOpacity: 0.25,\r\n                shadowRadius: 3.84,\r\n                elevation: 5,\r\n        borderWidth:2,\r\n        borderColor:'gainsboro',\r\n        marginBottom: 10,\r\n        alignSelf:'center',\r\n        },\r\n    listRow: {\r\n        margin: 4,\r\n        flexDirection: \"row\",\r\n        height: 150,\r\n        elevation: 4,\r\n        borderRadius: 40,\r\n    },\r\n    userDetailsRow: {\r\n        flexDirection: \"row\",\r\n        height: 40,\r\n        alignItems:'flex-start'\r\n        ,alignSelf:'center'\r\n    },\r\n    listRowImage: {\r\n        margin: 10,\r\n        resizeMode: \"contain\",\r\n        height: 130,\r\n        width: 130,\r\n    },\r\n    listRowTextContainer: {\r\n        flex: 1,\r\n        flexDirection:'column',\r\n        margin: 20,\r\n        justifyContent: \"space-around\"\r\n    },\r\n    listRowName: {\r\n        fontSize: 30\r\n    },\r\n    listRowId: {\r\n        fontSize: 25\r\n    },\r\n    profilePicture: {\r\n        width: 35,\r\n        height: 35,\r\n        borderRadius: 75,\r\n        marginEnd: 20\r\n      },\r\n      card: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 10,\r\n        padding: 0,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n      },\r\n      cardItem: {\r\n        backgroundColor: 'aliceblue',\r\n        borderRadius: 70,\r\n      borderColor:\"lightcyan\",\r\n      borderWidth:2,\r\n        padding: 20,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 40,\r\n        marginVertical: 3, // add margin between each card\r\n      },\r\n      iconContainer: {\r\n        alignItems: 'center',\r\n      },\r\n      icon: {\r\n        width: 50,\r\n        height: 50,\r\n        marginBottom: 10,\r\n      },\r\n      iconLabel: {\r\n        fontSize: 15,\r\n        marginBottom:10,\r\n        fontWeight: 'bold',\r\n        color:'mediumturquoise',\r\n        textAlign: 'center',\r\n      },\r\n      iconValue: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n     \r\n        \r\n      },value: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color:'grey',\r\n        marginRight: 8,\r\n        alignSelf:'center'\r\n      },\r\n});\r\n\r\nexport default WatchHospitalsPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}