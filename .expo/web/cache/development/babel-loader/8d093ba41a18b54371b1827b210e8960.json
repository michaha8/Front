{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PreferenceList = function PreferenceList(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(route.params.preferenceArray),\n    _useState2 = _slicedToArray(_useState, 2),\n    preferences = _useState2[0],\n    setPreferences = _useState2[1];\n  var onSave = function onSave() {\n    console.log(route.params.userType);\n    console.log(route.params);\n    navigation.navigate(\"HomePage\" + route.params.userType);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Your preferences:\"\n    }), preferences.map(function (preference, index) {\n      return _jsxs(View, {\n        style: styles.preferenceRow,\n        children: [_jsx(View, {\n          style: styles.preferenceLabelContainer,\n          children: _jsxs(Text, {\n            style: styles.preferenceLabel,\n            children: [\"Preference \", index + 1, \": \"]\n          })\n        }), _jsx(View, {\n          style: styles.preferenceValueContainer,\n          children: _jsx(Text, {\n            style: styles.preferenceValue,\n            children: preference\n          })\n        })]\n      }, index);\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: onSave,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Save preferences\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Change preferences\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\"\n  },\n  buttonContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  preferenceTextContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 8\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 16\n  },\n  preferenceContainer: {\n    flex: 1\n  },\n  preferenceText: {\n    fontSize: 18,\n    alignSelf: 'center'\n  },\n  preferenceInput: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 8,\n    borderRadius: 4,\n    marginTop: 8\n  },\n  button: {\n    backgroundColor: \"#007AFF\",\n    padding: 12,\n    borderRadius: 4,\n    marginTop: 16\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 18,\n    textAlign: \"center\"\n  },\n  preferenceRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  preferenceLabelContainer: {\n    marginRight: 8\n  },\n  preferenceLabel: {\n    fontWeight: 'bold'\n  },\n  preferenceValueContainer: {\n    flex: 1\n  },\n  preferenceValue: {\n    fontSize: 18\n  }\n});\nexport default PreferenceList;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TouchableOpacity","View","jsx","_jsx","jsxs","_jsxs","PreferenceList","_ref","navigation","route","_useState","params","preferenceArray","_useState2","_slicedToArray","preferences","setPreferences","onSave","console","log","userType","navigate","style","styles","container","children","title","map","preference","index","preferenceRow","preferenceLabelContainer","preferenceLabel","preferenceValueContainer","preferenceValue","buttonContainer","button","onPress","buttonText","goBack","create","flex","padding","backgroundColor","position","bottom","left","right","flexDirection","justifyContent","preferenceTextContainer","alignItems","marginRight","fontSize","fontWeight","marginBottom","preferenceContainer","preferenceText","alignSelf","preferenceInput","borderWidth","borderColor","borderRadius","marginTop","color","textAlign"],"sources":["C:/Users/michael harush/Desktop/Front/components/PreferenceListPage.tsx"],"sourcesContent":["import { AntDesign } from \"@expo/vector-icons\";\r\nimport React, { Component , useEffect,FC, useState }from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n  View,\r\n  TextInput,\r\n  Alert,\r\n  ScrollView,\r\n  ImageBackground,\r\n\r\n} from \"react-native\";\r\nimport UserModel, {Post} from \"../model/UserModel\";\r\n\r\nconst PreferenceList: FC<{ navigation: any ,route:any}> = ({ navigation, route }) => {\r\n    const [preferences, setPreferences] = useState(route.params.preferenceArray);\r\n\r\n    const onSave = () => {\r\n        console.log(route.params.userType)\r\n        console.log(route.params)\r\n         navigation.navigate(`HomePage${route.params.userType}`)\r\n\r\n    };\r\n  \r\n   \r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n          <Text style={styles.title}>Your preferences:</Text>\r\n          {preferences.map((preference, index) => (\r\n            <View key={index} style={styles.preferenceRow}>\r\n              <View style={styles.preferenceLabelContainer}>\r\n                <Text style={styles.preferenceLabel}>Preference {index + 1}: </Text>\r\n              </View>\r\n              <View style={styles.preferenceValueContainer}>\r\n                <Text style={styles.preferenceValue}>{preference}</Text>\r\n              </View>\r\n            </View>\r\n          ))}\r\n          <View style={styles.buttonContainer}>\r\n          <TouchableOpacity style={styles.button} onPress={onSave}>\r\n            <Text style={styles.buttonText}>Save preferences</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={()=>navigation.goBack()}>\r\n            <Text style={styles.buttonText}>Change preferences</Text>\r\n          </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      );\r\n          };      \r\n    \r\n    const styles = StyleSheet.create({\r\n      container: {\r\n        flex: 1,\r\n        padding: 16,\r\n        backgroundColor: \"#fff\",\r\n      }, buttonContainer: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        padding: 16,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n      },\r\n      preferenceTextContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginRight: 8,\r\n      },\r\n      title: {\r\n        fontSize: 24,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 16,\r\n      },\r\n     \r\n      preferenceContainer: {\r\n        flex: 1,\r\n      },\r\n      preferenceText: {\r\n        fontSize: 18,\r\n        alignSelf:'center'\r\n      },\r\n      preferenceInput: {\r\n        flex: 1,\r\n        borderWidth: 1,\r\n        borderColor: \"#ccc\",\r\n        padding: 8,\r\n        borderRadius: 4,\r\n        marginTop: 8,\r\n      },\r\n      button: {\r\n        backgroundColor: \"#007AFF\",\r\n        padding: 12,\r\n        borderRadius: 4,\r\n        marginTop: 16,\r\n      },\r\n      buttonText: {\r\n        color: \"#fff\",\r\n        fontSize: 18,\r\n        textAlign: \"center\",\r\n      },preferenceRow: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 8,\r\n      },\r\n      preferenceLabelContainer: {\r\n        marginRight: 8,\r\n      },\r\n      preferenceLabel: {\r\n        fontWeight: 'bold',\r\n      },\r\n      preferenceValueContainer: {\r\n        flex: 1,\r\n      },\r\n      preferenceValue: {\r\n        fontSize: 18,\r\n      },\r\n    });\r\n    \r\n    export default PreferenceList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}