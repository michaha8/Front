{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AuthApi from \"../api/AuthApi\";\nvar register = function () {\n  var _ref = _asyncToGenerator(function* (user) {\n    var data = {\n      email: user.email,\n      name: user.name,\n      password: user.password,\n      userType: user.userType,\n      phoneNumber: user.phoneNumber,\n      city: user.city\n    };\n    try {\n      var res = yield AuthApi.register(data);\n      console.log('success signup authmodel');\n    } catch (err) {\n      console.log(\"register failed: \" + err);\n    }\n  });\n  return function register(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar login = function () {\n  var _ref2 = _asyncToGenerator(function* (user) {\n    var d = {\n      email: user.email,\n      name: user.name,\n      password: user.password,\n      avatarUrl: user.avatarUrl\n    };\n    try {\n      var res = yield AuthApi.login(d);\n      var data = res.data;\n      if (typeof data.id === 'undefined') {\n        console.log('data err');\n        return data.id;\n      } else {\n        var accessToken = data.accessToken,\n          id = data.id,\n          refreshToken = data.refreshToken;\n        var userRes = [accessToken, id, refreshToken];\n        console.log('good data');\n        return userRes;\n      }\n    } catch (err) {\n      console.log('login failed:', err);\n      throw err;\n    }\n  });\n  return function login(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar logout = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    console.log(\"logout\");\n    yield AuthApi.logout();\n  });\n  return function logout() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport default {\n  register: register,\n  login: login,\n  logout: logout\n};","map":{"version":3,"names":["AuthApi","register","_ref","_asyncToGenerator","user","data","email","name","password","userType","phoneNumber","city","res","console","log","err","_x","apply","arguments","login","_ref2","d","avatarUrl","id","accessToken","refreshToken","userRes","_x2","logout","_ref3"],"sources":["C:/Users/michael harush/Desktop/Front/model/AuthModel.tsx"],"sourcesContent":["import AuthApi from \"../api/AuthApi\";\r\nimport apiClient from \"../api/ClientApi\";\r\n\r\nexport type User = {\r\n    email: String,\r\n    name: String,\r\n    password: String,\r\n    //avatarUrl: String\r\n    userType:String,\r\n    phoneNumber:String,\r\n    city:String\r\n}\r\nexport type UserIntern = {\r\n  id: String,\r\n  email: String,\r\n  name: String,\r\n  password: String,\r\n  avatarUrl: String\r\n}\r\n\r\nexport type Token = {\r\n    refreshtoken: string,\r\n}\r\n\r\ntype UserInfo = {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n    id: string;\r\n};\r\n\r\nconst register = async (user: User) => {\r\n    const data = {\r\n      email: user.email,\r\n      name: user.name,\r\n      password: user.password,\r\n      //avatarUrl: user.avatarUrl\r\n      userType:user.userType,\r\n      phoneNumber:user.phoneNumber,\r\n      city:user.city\r\n    }\r\n    try {\r\n        const res = await AuthApi.register(data)\r\n        console.log('success signup authmodel')\r\n    } catch (err) {\r\n        console.log(\"register failed: \" + err)\r\n    }\r\n}\r\n\r\nconst login = async (user: User): Promise<string | UserInfo | any> => {\r\n    const d = {\r\n      email: user.email,\r\n      name: user.name,\r\n      password: user.password,\r\n      avatarUrl: user.avatarUrl\r\n    };\r\n    try {\r\n      const res = await AuthApi.login(d);\r\n      const data: UserInfo | any = res.data;\r\n      if (typeof data.id === 'undefined') {\r\n        console.log('data err');\r\n        return data.id as string;\r\n      } else {\r\n        const { accessToken, id, refreshToken } = data;\r\n        const userRes = [accessToken, id, refreshToken];\r\n        console.log('good data');\r\n        return userRes;\r\n      }\r\n    } catch (err) {\r\n      console.log('login failed:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = async (): Promise<void> => {\r\n    console.log(\"logout\");\r\n    await AuthApi.logout();\r\n  };\r\n\r\nexport default {register, login, logout}"],"mappings":";AAAA,OAAOA,OAAO;AA8Bd,IAAMC,QAAQ;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAU,EAAK;IACnC,IAAMC,IAAI,GAAG;MACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;MAEvBC,QAAQ,EAACL,IAAI,CAACK,QAAQ;MACtBC,WAAW,EAACN,IAAI,CAACM,WAAW;MAC5BC,IAAI,EAACP,IAAI,CAACO;IACZ,CAAC;IACD,IAAI;MACA,IAAMC,GAAG,SAASZ,OAAO,CAACC,QAAQ,CAACI,IAAI,CAAC;MACxCQ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVF,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGC,GAAG,CAAC;IAC1C;EACJ,CAAC;EAAA,gBAhBKd,QAAQA,CAAAe,EAAA;IAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgBb;AAED,IAAMC,KAAK;EAAA,IAAAC,KAAA,GAAAjB,iBAAA,CAAG,WAAOC,IAAU,EAAuC;IAClE,IAAMiB,CAAC,GAAG;MACRf,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;MACvBc,SAAS,EAAElB,IAAI,CAACkB;IAClB,CAAC;IACD,IAAI;MACF,IAAMV,GAAG,SAASZ,OAAO,CAACmB,KAAK,CAACE,CAAC,CAAC;MAClC,IAAMhB,IAAoB,GAAGO,GAAG,CAACP,IAAI;MACrC,IAAI,OAAOA,IAAI,CAACkB,EAAE,KAAK,WAAW,EAAE;QAClCV,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvB,OAAOT,IAAI,CAACkB,EAAE;MAChB,CAAC,MAAM;QACL,IAAQC,WAAW,GAAuBnB,IAAI,CAAtCmB,WAAW;UAAED,EAAE,GAAmBlB,IAAI,CAAzBkB,EAAE;UAAEE,YAAY,GAAKpB,IAAI,CAArBoB,YAAY;QACrC,IAAMC,OAAO,GAAG,CAACF,WAAW,EAAED,EAAE,EAAEE,YAAY,CAAC;QAC/CZ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,OAAOY,OAAO;MAChB;IACF,CAAC,CAAC,OAAOX,GAAG,EAAE;MACZF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,GAAG,CAAC;MACjC,MAAMA,GAAG;IACX;EACF,CAAC;EAAA,gBAvBGI,KAAKA,CAAAQ,GAAA;IAAA,OAAAP,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAuBR;AAED,IAAMU,MAAM;EAAA,IAAAC,KAAA,GAAA1B,iBAAA,CAAG,aAA2B;IACxCU,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMd,OAAO,CAAC4B,MAAM,EAAE;EACxB,CAAC;EAAA,gBAHKA,MAAMA,CAAA;IAAA,OAAAC,KAAA,CAAAZ,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGX;AAEH,eAAe;EAACjB,QAAQ,EAARA,QAAQ;EAAEkB,KAAK,EAALA,KAAK;EAAES,MAAM,EAANA;AAAM,CAAC"},"metadata":{},"sourceType":"module"}