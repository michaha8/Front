{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport FormData from \"form-data\";\nimport UserApi from \"../api/UserApi\";\nvar uploadImage = function () {\n  var _ref = _asyncToGenerator(function* (imageURI) {\n    var body = new FormData();\n    body.append(\"file\", {\n      name: \"name\",\n      type: \"image/jpeg\",\n      uri: imageURI\n    });\n    try {\n      var res = yield UserApi.uploadImage(body);\n      if (!res.ok) {\n        console.log(\"save failed \" + res.problem);\n      } else {\n        if (res.data) {\n          var d = res.data;\n          console.log(\"url: \" + d.url);\n          return d.url;\n        }\n      }\n    } catch (err) {\n      console.log(\"save failed \" + err);\n    }\n    return \"\";\n  });\n  return function uploadImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getUserById = function () {\n  var _ref2 = _asyncToGenerator(function* (id) {\n    try {\n      var res = yield UserApi.getUserById(id);\n      if (!res.ok) {\n        console.log(\"fail getting user from db by ID\");\n      } else {\n        if (res.data) {\n          var d = [res.data.name, res.data.avatarUrl];\n          return d;\n        }\n      }\n    } catch (err) {\n      console.log('fail getting user from db by ID ' + err);\n    }\n  });\n  return function getUserById(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar addNewPost = function () {\n  var _ref3 = _asyncToGenerator(function* (post) {\n    var data = {\n      message: post.message,\n      sender: post.sender,\n      avatarUrl: post.avatarUrl\n    };\n    try {\n      var res = yield UserApi.addNewPost(data);\n      console.log('success add new post');\n    } catch (err) {\n      console.log(\"add new post failed: \" + err);\n    }\n  });\n  return function addNewPost(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar getAllPosts = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    var res = yield UserApi.getAllPosts();\n    var d = Array();\n    if (res.data) {\n      res.data.forEach(function (obj) {\n        var s = obj.avatarUrl;\n        var p = {\n          message: obj.message,\n          sender: obj.sender,\n          avatarUrl: s\n        };\n        console.log(obj);\n        console.log(p.sender);\n        console.log(p.message);\n        d.push(p);\n      });\n    }\n    return d;\n  });\n  return function getAllPosts() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar upadteUser = function () {\n  var _ref5 = _asyncToGenerator(function* (user_update) {\n    var data = {\n      id: user_update.id,\n      name: user_update.name,\n      avatarUrl: user_update.avatarUrl\n    };\n    try {\n      var res = yield UserApi.upadteUser(data);\n      console.log('success update user');\n    } catch (err) {\n      console.log(\"update user failed: \" + err);\n    }\n  });\n  return function upadteUser(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport default {\n  uploadImage: uploadImage,\n  getUserById: getUserById,\n  addNewPost: addNewPost,\n  getAllPosts: getAllPosts,\n  upadteUser: upadteUser\n};","map":{"version":3,"names":["FormData","UserApi","uploadImage","_ref","_asyncToGenerator","imageURI","body","append","name","type","uri","res","ok","console","log","problem","data","d","url","err","_x","apply","arguments","getUserById","_ref2","id","avatarUrl","_x2","addNewPost","_ref3","post","message","sender","_x3","getAllPosts","_ref4","Array","forEach","obj","s","p","push","upadteUser","_ref5","user_update","_x4"],"sources":["C:/Users/michael harush/Desktop/Front/model/UserModel.tsx"],"sourcesContent":["import FormData from \"form-data\";\r\nimport AuthApi from \"../api/AuthApi\";\r\nimport apiClient from \"../api/ClientApi\";\r\nimport UserApi from \"../api/UserApi\";\r\n\r\nexport type UserHospital = {\r\n  name: String,\r\n  email: String,\r\n  password: String,\r\n  city:String,\r\n  phoneNumber:String,\r\n // avatarUrl: String\r\n  description:String\r\n}\r\nexport type UserIntern = {\r\n  email: String,\r\n  name: String,\r\n  password: String,\r\n  avatarUrl: String\r\n}\r\n\r\nexport type Post = {\r\n  message: String,\r\n  sender: String,\r\n  avatarUrl: String\r\n}\r\n\r\nexport type UserUpdate = {\r\n  id: String,\r\n  name: String,\r\n  avatarUrl: String\r\n}\r\n\r\nconst uploadImage = async (imageURI: String) => {\r\n  var body = new FormData();\r\n  body.append(\"file\", { name: \"name\", type: \"image/jpeg\", uri: imageURI });\r\n  try {\r\n    const res = await UserApi.uploadImage(body);\r\n    if (!res.ok) {\r\n      console.log(\"save failed \" + res.problem);\r\n    } else {\r\n      if(res.data){\r\n        const d: any = res.data\r\n        console.log(\"url: \" + d.url)\r\n        return d.url\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(\"save failed \" + err);\r\n  }\r\n  return \"\"\r\n};\r\n\r\nconst getUserById = async (id:string) =>{\r\n  try{\r\n    const res = await UserApi.getUserById(id);\r\n    if(!res.ok) {\r\n      console.log(\"fail getting user from db by ID\");\r\n    } else {\r\n      if(res.data){\r\n        const d: any = [res.data.name,res.data.avatarUrl]\r\n        return d\r\n      }\r\n    }\r\n  }catch(err) {\r\n    console.log('fail getting user from db by ID ' + err)\r\n  }\r\n}\r\n\r\nconst addNewPost = async (post:Post)=>{\r\n  const data = {\r\n    message: post.message,\r\n    sender: post.sender,\r\n    avatarUrl: post.avatarUrl\r\n  }\r\n  try {\r\n      const res = await UserApi.addNewPost(data)\r\n      console.log('success add new post')\r\n  } catch (err) {\r\n      console.log(\"add new post failed: \" + err)\r\n  }\r\n}\r\n\r\nconst getAllPosts = async () => {\r\n  const res:any = await UserApi.getAllPosts()\r\n  let d = Array<Post>()\r\n  if (res.data) {\r\n      res.data.forEach((obj: any) => {\r\n        const s = obj.avatarUrl\r\n          const p: Post = {\r\n            message: obj.message,\r\n            sender: obj.sender,\r\n            avatarUrl: s\r\n          }\r\n          console.log(obj)\r\n          console.log(p.sender)\r\n          console.log(p.message)\r\n          d.push(p)\r\n      });\r\n  }\r\n  return d\r\n}\r\n\r\nconst upadteUser = async (user_update:UserUpdate) => {\r\n  const data = {\r\n    id: user_update.id,\r\n    name: user_update.name,\r\n    avatarUrl: user_update.avatarUrl\r\n  }\r\n\r\n  try {\r\n    const res:any = await UserApi.upadteUser(data)\r\n    console.log('success update user')\r\n  } catch (err) {\r\n    console.log(\"update user failed: \" + err)\r\n  }\r\n}\r\n\r\n\r\nexport default {uploadImage,getUserById,addNewPost,getAllPosts,upadteUser}"],"mappings":"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"},"metadata":{},"sourceType":"module"}